// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: event_repository.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventReq) Reset() {
	*x = CreateEventReq{}
	mi := &file_event_repository_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventReq) ProtoMessage() {}

func (x *CreateEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventReq.ProtoReflect.Descriptor instead.
func (*CreateEventReq) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{0}
}

func (x *CreateEventReq) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type CreateEventResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResp) Reset() {
	*x = CreateEventResp{}
	mi := &file_event_repository_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResp) ProtoMessage() {}

func (x *CreateEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResp.ProtoReflect.Descriptor instead.
func (*CreateEventResp) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEventResp) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type RetryingEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryingEventReq) Reset() {
	*x = RetryingEventReq{}
	mi := &file_event_repository_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryingEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryingEventReq) ProtoMessage() {}

func (x *RetryingEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryingEventReq.ProtoReflect.Descriptor instead.
func (*RetryingEventReq) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{2}
}

func (x *RetryingEventReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type RetryingEventResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryingEventResp) Reset() {
	*x = RetryingEventResp{}
	mi := &file_event_repository_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryingEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryingEventResp) ProtoMessage() {}

func (x *RetryingEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryingEventResp.ProtoReflect.Descriptor instead.
func (*RetryingEventResp) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{3}
}

type DeliveredEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeliveredEventReq) Reset() {
	*x = DeliveredEventReq{}
	mi := &file_event_repository_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveredEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveredEventReq) ProtoMessage() {}

func (x *DeliveredEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveredEventReq.ProtoReflect.Descriptor instead.
func (*DeliveredEventReq) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{4}
}

func (x *DeliveredEventReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type DeliveredEventResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeliveredEventResp) Reset() {
	*x = DeliveredEventResp{}
	mi := &file_event_repository_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeliveredEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveredEventResp) ProtoMessage() {}

func (x *DeliveredEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveredEventResp.ProtoReflect.Descriptor instead.
func (*DeliveredEventResp) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{5}
}

type DeadEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeadEventReq) Reset() {
	*x = DeadEventReq{}
	mi := &file_event_repository_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeadEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadEventReq) ProtoMessage() {}

func (x *DeadEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadEventReq.ProtoReflect.Descriptor instead.
func (*DeadEventReq) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{6}
}

func (x *DeadEventReq) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type DeadEventResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeadEventResp) Reset() {
	*x = DeadEventResp{}
	mi := &file_event_repository_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeadEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadEventResp) ProtoMessage() {}

func (x *DeadEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadEventResp.ProtoReflect.Descriptor instead.
func (*DeadEventResp) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{7}
}

type ReadEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         *Query                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadEventReq) Reset() {
	*x = ReadEventReq{}
	mi := &file_event_repository_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEventReq) ProtoMessage() {}

func (x *ReadEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEventReq.ProtoReflect.Descriptor instead.
func (*ReadEventReq) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{8}
}

func (x *ReadEventReq) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type ReadEventResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *Result                `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadEventResp) Reset() {
	*x = ReadEventResp{}
	mi := &file_event_repository_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadEventResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadEventResp) ProtoMessage() {}

func (x *ReadEventResp) ProtoReflect() protoreflect.Message {
	mi := &file_event_repository_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadEventResp.ProtoReflect.Descriptor instead.
func (*ReadEventResp) Descriptor() ([]byte, []int) {
	return file_event_repository_proto_rawDescGZIP(), []int{9}
}

func (x *ReadEventResp) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_event_repository_proto protoreflect.FileDescriptor

const file_event_repository_proto_rawDesc = "" +
	"\n" +
	"\x16event_repository.proto\x12\x10event_repository\x1a\vkafka.proto\"4\n" +
	"\x0eCreateEventReq\x12\"\n" +
	"\x05event\x18\x01 \x01(\v2\f.kafka.EventR\x05event\",\n" +
	"\x0fCreateEventResp\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\"-\n" +
	"\x10RetryingEventReq\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\"\x13\n" +
	"\x11RetryingEventResp\".\n" +
	"\x11DeliveredEventReq\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\"\x14\n" +
	"\x12DeliveredEventResp\")\n" +
	"\fDeadEventReq\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\"\x0f\n" +
	"\rDeadEventResp\"2\n" +
	"\fReadEventReq\x12\"\n" +
	"\x05query\x18\x01 \x01(\v2\f.kafka.QueryR\x05query\"6\n" +
	"\rReadEventResp\x12%\n" +
	"\x06result\x18\x01 \x01(\v2\r.kafka.ResultR\x06result2\xb8\x03\n" +
	"\x0fEventRepository\x12R\n" +
	"\vCreateEvent\x12 .event_repository.CreateEventReq\x1a!.event_repository.CreateEventResp\x12X\n" +
	"\rRetryingEvent\x12\".event_repository.RetryingEventReq\x1a#.event_repository.RetryingEventResp\x12[\n" +
	"\x0eDeliveredEvent\x12#.event_repository.DeliveredEventReq\x1a$.event_repository.DeliveredEventResp\x12L\n" +
	"\tDeadEvent\x12\x1e.event_repository.DeadEventReq\x1a\x1f.event_repository.DeadEventResp\x12L\n" +
	"\tReadEvent\x12\x1e.event_repository.ReadEventReq\x1a\x1f.event_repository.ReadEventRespB\x05Z\x03/pbb\x06proto3"

var (
	file_event_repository_proto_rawDescOnce sync.Once
	file_event_repository_proto_rawDescData []byte
)

func file_event_repository_proto_rawDescGZIP() []byte {
	file_event_repository_proto_rawDescOnce.Do(func() {
		file_event_repository_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_repository_proto_rawDesc), len(file_event_repository_proto_rawDesc)))
	})
	return file_event_repository_proto_rawDescData
}

var file_event_repository_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_event_repository_proto_goTypes = []any{
	(*CreateEventReq)(nil),     // 0: event_repository.CreateEventReq
	(*CreateEventResp)(nil),    // 1: event_repository.CreateEventResp
	(*RetryingEventReq)(nil),   // 2: event_repository.RetryingEventReq
	(*RetryingEventResp)(nil),  // 3: event_repository.RetryingEventResp
	(*DeliveredEventReq)(nil),  // 4: event_repository.DeliveredEventReq
	(*DeliveredEventResp)(nil), // 5: event_repository.DeliveredEventResp
	(*DeadEventReq)(nil),       // 6: event_repository.DeadEventReq
	(*DeadEventResp)(nil),      // 7: event_repository.DeadEventResp
	(*ReadEventReq)(nil),       // 8: event_repository.ReadEventReq
	(*ReadEventResp)(nil),      // 9: event_repository.ReadEventResp
	(*Event)(nil),              // 10: kafka.Event
	(*Query)(nil),              // 11: kafka.Query
	(*Result)(nil),             // 12: kafka.Result
}
var file_event_repository_proto_depIdxs = []int32{
	10, // 0: event_repository.CreateEventReq.event:type_name -> kafka.Event
	11, // 1: event_repository.ReadEventReq.query:type_name -> kafka.Query
	12, // 2: event_repository.ReadEventResp.result:type_name -> kafka.Result
	0,  // 3: event_repository.EventRepository.CreateEvent:input_type -> event_repository.CreateEventReq
	2,  // 4: event_repository.EventRepository.RetryingEvent:input_type -> event_repository.RetryingEventReq
	4,  // 5: event_repository.EventRepository.DeliveredEvent:input_type -> event_repository.DeliveredEventReq
	6,  // 6: event_repository.EventRepository.DeadEvent:input_type -> event_repository.DeadEventReq
	8,  // 7: event_repository.EventRepository.ReadEvent:input_type -> event_repository.ReadEventReq
	1,  // 8: event_repository.EventRepository.CreateEvent:output_type -> event_repository.CreateEventResp
	3,  // 9: event_repository.EventRepository.RetryingEvent:output_type -> event_repository.RetryingEventResp
	5,  // 10: event_repository.EventRepository.DeliveredEvent:output_type -> event_repository.DeliveredEventResp
	7,  // 11: event_repository.EventRepository.DeadEvent:output_type -> event_repository.DeadEventResp
	9,  // 12: event_repository.EventRepository.ReadEvent:output_type -> event_repository.ReadEventResp
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_event_repository_proto_init() }
func file_event_repository_proto_init() {
	if File_event_repository_proto != nil {
		return
	}
	file_kafka_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_repository_proto_rawDesc), len(file_event_repository_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_repository_proto_goTypes,
		DependencyIndexes: file_event_repository_proto_depIdxs,
		MessageInfos:      file_event_repository_proto_msgTypes,
	}.Build()
	File_event_repository_proto = out.File
	file_event_repository_proto_goTypes = nil
	file_event_repository_proto_depIdxs = nil
}
