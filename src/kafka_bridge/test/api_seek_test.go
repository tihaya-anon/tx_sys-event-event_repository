/*
Kafka Bridge API Reference

Testing SeekAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package kafka_bridge

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/tihaya-anon/tx_sys-event-event_repository/src/kafka_bridge"
)

func Test_kafka_bridge_SeekAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SeekAPIService Seek", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var groupid string
		var name string

		httpRes, err := apiClient.SeekAPI.Seek(context.Background(), groupid, name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SeekAPIService SeekToBeginning", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var groupid string
		var name string

		httpRes, err := apiClient.SeekAPI.SeekToBeginning(context.Background(), groupid, name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SeekAPIService SeekToEnd", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var groupid string
		var name string

		httpRes, err := apiClient.SeekAPI.SeekToEnd(context.Background(), groupid, name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
