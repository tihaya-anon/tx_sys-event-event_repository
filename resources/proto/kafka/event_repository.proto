syntax = "proto3";
package event_repository;
import "kafka.proto";
option go_package = "github.com/tihaya-anon/tx_sys-event-event_repository/src/pb/kafka";

message CreateEventReq { repeated kafka.Event events = 1; }

message CreateEventResp { repeated kafka.EventIdWrapper event_ids = 1; }

message RetryingEventReq { repeated string event_ids = 1; }

message RetryingEventResp { repeated kafka.EventIdWrapper event_ids = 1; }

message DeliveredEventReq { repeated string event_ids = 1; }

message DeliveredEventResp { repeated kafka.EventIdWrapper event_ids = 1; }

message DeadEventReq { repeated string event_ids = 1; }

message DeadEventResp { repeated kafka.EventIdWrapper event_ids = 1; }

message ReadEventReq { kafka.Query query = 1; }

message ReadEventResp { kafka.Result result = 1; }

service EventRepository {
  rpc CreateEvent(CreateEventReq) returns (CreateEventResp);
  rpc RetryingEvent(RetryingEventReq) returns (RetryingEventResp);
  rpc DeliveredEvent(DeliveredEventReq) returns (DeliveredEventResp);
  rpc DeadEvent(DeadEventReq) returns (DeadEventResp);
  rpc ReadEvent(ReadEventReq) returns (ReadEventResp);
}