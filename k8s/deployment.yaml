apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-repo
  labels:
    app: event-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-repo
  template:
    metadata:
      labels:
        app: event-repo
    spec:
      initContainers:
      - name: init-db-schema
        image: postgres:14-alpine
        command: ['sh', '-c', 
          'until pg_isready -h postgresql.event-repo.svc.cluster.local -p 5432; do echo waiting for database; sleep 2; done; 
          echo applying database schema; 
          PGPASSWORD=$DB_PASSWORD psql -h postgresql.event-repo.svc.cluster.local -U $DB_USER -d $DB_NAME -f /schema/schema.sql -v ON_ERROR_STOP=1;
          echo schema applied successfully']
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: event-repo-db-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: event-repo-db-secrets
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: event-repo-db-secrets
              key: DB_NAME
        volumeMounts:
        - name: schema-volume
          mountPath: /schema
      containers:
      - name: event-repo
        image: event_repo:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 50051
          name: grpc
        env:
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: event-repo-config
              key: APP_ENV
        - name: TEST_DB_URL
          valueFrom:
            secretKeyRef:
              name: event-repo-db-secrets
              key: TEST_DB_URL
        - name: DEV_DB_URL
          valueFrom:
            secretKeyRef:
              name: event-repo-db-secrets
              key: DEV_DB_URL
        - name: PROD_DB_URL
          valueFrom:
            secretKeyRef:
              name: event-repo-db-secrets
              key: PROD_DB_URL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
              - grpc-health-probe
              - -addr=:50051
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - grpc-health-probe
              - -addr=:50051
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: schema-volume
        configMap:
          name: event-repo-schema
